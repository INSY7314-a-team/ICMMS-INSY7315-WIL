@model List<ICCMS_Web.Models.User>

@{
    ViewData["Title"] = "User Management Dashboard";
}

<!-- Modern Dashboard Header -->
<div class="dashboard-header bg-gradient-primary text-white py-4 mb-4">
    <div class="container-fluid">
        <div class="row align-items-center">
            <div class="col-md-8">
                <h1 class="h3 mb-0">
                    <i class="fas fa-users-cog me-3"></i>User Management Dashboard
                </h1>
                <p class="mb-0 opacity-75">Manage system users, roles, and permissions</p>
            </div>
            <div class="col-md-4 text-md-end">
                <a href="@Url.Action("Create", "Users")" class="btn btn-light btn-lg shadow-sm">
                    <i class="fas fa-user-plus me-2"></i>Add New User
                </a>
            </div>
        </div>
    </div>
</div>

<div class="container-fluid">
    <!-- Alert Messages -->
    @if (TempData["SuccessMessage"] != null)
    {
        <div class="alert alert-success alert-dismissible fade show shadow-sm" role="alert">
            <div class="d-flex align-items-center">
                <i class="fas fa-check-circle me-3 fs-4"></i>
                <div>
                    <strong>Success!</strong> @TempData["SuccessMessage"]
                </div>
            </div>
            <button type="button" class="btn-close" data-bs-dismiss="alert"></button>
        </div>
    }

    @if (TempData["ErrorMessage"] != null)
    {
        <div class="alert alert-danger alert-dismissible fade show shadow-sm" role="alert">
            <div class="d-flex align-items-center">
                <i class="fas fa-exclamation-triangle me-3 fs-4"></i>
                <div>
                    <strong>Error!</strong> @TempData["ErrorMessage"]
                </div>
            </div>
            <button type="button" class="btn-close" data-bs-dismiss="alert"></button>
        </div>
    }

    <!-- Dashboard Stats Cards -->
    <div class="row mb-4">
        <div class="col-xl-3 col-md-6 mb-3">
            <div class="card stat-card bg-primary text-white h-100 shadow-sm">
                <div class="card-body">
                    <div class="d-flex justify-content-between align-items-center">
                        <div>
                            <h6 class="card-title text-white-50 mb-1">Total Users</h6>
                            <h2 class="mb-0">@(Model?.Count ?? 0)</h2>
                        </div>
                        <div class="stat-icon">
                            <i class="fas fa-users fa-2x opacity-75"></i>
                        </div>
                    </div>
                </div>
            </div>
        </div>
        <div class="col-xl-3 col-md-6 mb-3">
            <div class="card stat-card bg-success text-white h-100 shadow-sm">
                <div class="card-body">
                    <div class="d-flex justify-content-between align-items-center">
                        <div>
                            <h6 class="card-title text-white-50 mb-1">Active Users</h6>
                            <h2 class="mb-0">@(Model?.Count(u => u.IsActive) ?? 0)</h2>
                        </div>
                        <div class="stat-icon">
                            <i class="fas fa-user-check fa-2x opacity-75"></i>
                        </div>
                    </div>
                </div>
            </div>
        </div>
        <div class="col-xl-3 col-md-6 mb-3">
            <div class="card stat-card bg-warning text-white h-100 shadow-sm">
                <div class="card-body">
                    <div class="d-flex justify-content-between align-items-center">
                        <div>
                            <h6 class="card-title text-white-50 mb-1">Admins</h6>
                            <h2 class="mb-0">@(Model?.Count(u => u.Role?.ToLower() == "admin") ?? 0)</h2>
                        </div>
                        <div class="stat-icon">
                            <i class="fas fa-shield-alt fa-2x opacity-75"></i>
                        </div>
                    </div>
                </div>
            </div>
        </div>
        <div class="col-xl-3 col-md-6 mb-3">
            <div class="card stat-card bg-info text-white h-100 shadow-sm">
                <div class="card-body">
                    <div class="d-flex justify-content-between align-items-center">
                        <div>
                            <h6 class="card-title text-white-50 mb-1">Managers</h6>
                            <h2 class="mb-0">@(Model?.Count(u => u.Role?.ToLower() == "project manager") ?? 0)</h2>
                        </div>
                        <div class="stat-icon">
                            <i class="fas fa-user-tie fa-2x opacity-75"></i>
                        </div>
                    </div>
                </div>
            </div>
        </div>
        <div class="col-xl-3 col-md-6 mb-3">
            <div class="card stat-card bg-info text-white h-100 shadow-sm">
                <div class="card-body" style="background-color:rgb(6, 92, 27); border-radius: 10px;">
                    <div class="d-flex justify-content-between align-items-center">
                        <div>
                            <h6 class="card-title text-white-50 mb-1">Contractors</h6>
                            <h2 class="mb-0">@(Model?.Count(u => u.Role?.ToLower() == "contractor") ?? 0)</h2>
                        </div>
                        <div class="stat-icon">
                            <i class="fas fa-hammer fa-2x opacity-75"></i>
                        </div>
                    </div>
                </div>
            </div>
        </div>
        <div class="col-xl-3 col-md-6 mb-3">
            <div class="card stat-card bg-info text-white h-100 shadow-sm">
                <div class="card-body" style="background-color:rgb(177, 130, 1); border-radius: 10px;">
                    <div class="d-flex justify-content-between align-items-center">
                        <div>
                            <h6 class="card-title text-white-50 mb-1">Clients</h6>
                            <h2 class="mb-0">@(Model?.Count(u => u.Role?.ToLower() == "client") ?? 0)</h2>
                        </div>
                        <div class="stat-icon">
                            <i class="fas fa-user-tie fa-2x opacity-75"></i>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>

    <!-- Main Content Card -->
    <div class="card shadow-sm border-0">
        <div class="card-header bg-white border-0 py-3">
            <div class="row align-items-center">
                <div class="col-md-6">
                    <h5 class="card-title mb-0 text-dark">
                        <i class="fas fa-list me-2 text-primary"></i>User Directory
                    </h5>
                </div>
                <div class="col-md-6">
                    <div class="d-flex gap-2 justify-content-md-end">
                        <div class="input-group input-group-sm" style="max-width: 300px;">
                            <span class="input-group-text bg-light border-end-0">
                                <i class="fas fa-search text-muted"></i>
                            </span>
                            <input type="text" class="form-control border-start-0" id="userSearch" 
                                   placeholder="Search users..." autocomplete="on" style="border-radius: 10px;">
                        </div>
                        <div class="dropdown">
                            <button class="btn btn-outline-secondary btn-sm dropdown-toggle" type="button" 
                                    data-bs-toggle="dropdown">
                                <i class="fas fa-filter me-1"></i>Filter
                            </button>
                            <ul class="dropdown-menu">
                                <li><a class="dropdown-item" href="#" data-filter="all">All Users</a></li>
                                <li><a class="dropdown-item" href="#" data-filter="active">Active Only</a></li>
                                <li><a class="dropdown-item" href="#" data-filter="inactive">Inactive Only</a></li>
                                <li><hr class="dropdown-divider"></li>
                                <li><a class="dropdown-item" href="#" data-filter="admin">Admins</a></li>
                                <li><a class="dropdown-item" href="#" data-filter="project manager">Project Managers</a></li>
                                <li><a class="dropdown-item" href="#" data-filter="contractor">Contractors</a></li>
                                <li><a class="dropdown-item" href="#" data-filter="client">Clients</a></li>
                            </ul>
                        </div>
                    </div>
                </div>
            </div>
        </div>
        
        <div class="card-body p-0">
            @if (Model != null && Model.Any())
            {
                <div class="table-responsive">
                    <table class="table table-hover mb-0" id="usersTable">
                        <thead class="table-light">
                            <tr>
                                <th class="border-0 ps-4">
                                    <div class="d-flex align-items-center">
                                        <i class="fas fa-user me-2 text-muted"></i>User
                                    </div>
                                </th>
                                <th class="border-0">
                                    <i class="fas fa-envelope me-2 text-muted"></i>Contact
                                </th>
                                <th class="border-0">
                                    <i class="fas fa-shield-alt me-2 text-muted"></i>Role
                                </th>
                                <th class="border-0">
                                    <i class="fas fa-calendar me-2 text-muted"></i>Created
                                </th>
                                <th class="border-0">
                                    <i class="fas fa-toggle-on me-2 text-muted"></i>Status
                                </th>
                                <th class="border-0 text-end pe-4">
                                    <i class="fas fa-cogs me-2 text-muted"></i>Actions
                                </th>
                            </tr>
                        </thead>
                        <tbody>
                            @foreach (var user in Model)
                            {
                                <tr class="user-row" data-user-id="@user.UserId" 
                                    data-status="@(user.IsActive ? "active" : "inactive")"
                                    data-role="@user.Role?.ToLower()">
                                    <td class="ps-4">
                                        <div class="d-flex align-items-center">
                                            <div class="avatar-circle me-3">
                                                <span class="avatar-text">@user.FullName.Substring(0, Math.Min(2, user.FullName.Length)).ToUpper()</span>
                                            </div>
                                            <div>
                                                <h6 class="mb-0 fw-semibold">@user.FullName</h6>
                                                <small class="text-muted">ID: @user.UserId.Substring(0, Math.Min(8, user.UserId.Length))...</small>
                                            </div>
                                        </div>
                                    </td>
                                    <td>
                                        <div class="d-flex flex-column">
                                            <a href="mailto:@user.Email" class="text-decoration-none text-dark">
                                                <i class="fas fa-envelope me-1 text-muted"></i>@user.Email
                                            </a>
                                            @if (!string.IsNullOrEmpty(user.Phone))
                                            {
                                                <a href="tel:@user.Phone" class="text-decoration-none text-muted small">
                                                    <i class="fas fa-phone me-1"></i>@user.Phone
                                                </a>
                                            }
                                            else
                                            {
                                                <span class="text-muted small">
                                                    <i class="fas fa-phone me-1"></i>No phone
                                                </span>
                                            }
                                        </div>
                                    </td>
                                    <td>
                                        @{
                                            var roleConfig = user.Role?.ToLower() switch
                                            {
                                                "admin" => new { badgeClass = "bg-danger", icon = "fas fa-shield-alt" },
                                                "project manager" => new { badgeClass = "bg-warning", icon = "fas fa-user-tie" },
                                                "contractor" => new { badgeClass = "bg-success", icon = "fas fa-hammer" },
                                                "client" => new { badgeClass = "bg-primary", icon = "fas fa-user-tie" },
                                                "user" => new { badgeClass = "bg-info", icon = "fas fa-user" },
                                                _ => new { badgeClass = "bg-secondary", icon = "fas fa-user" }
                                            };
                                        }
                                        <span class="badge @roleConfig.badgeClass rounded-pill">
                                            <i class="@roleConfig.icon me-1"></i>@user.Role
                                        </span>
                                    </td>
                                    <td>
                                        <div class="d-flex flex-column">
                                            <span class="fw-medium">@user.CreatedAt.ToString("MMM dd, yyyy")</span>
                                            <small class="text-muted">@user.CreatedAt.ToString("HH:mm")</small>
                                        </div>
                                    </td>
                                    <td>
                                        @if (user.IsActive)
                                        {
                                            <span class="badge bg-success rounded-pill">
                                                <i class="fas fa-check-circle me-1"></i>Active
                                            </span>
                                        }
                                        else
                                        {
                                            <span class="badge bg-danger rounded-pill">
                                                <i class="fas fa-times-circle me-1"></i>Inactive
                                            </span>
                                        }
                                    </td>
                                    <td class="text-end pe-4">
                                        <div class="btn-group" role="group">
                                            <button type="button" class="btn btn-sm btn-outline-primary dropdown-toggle" 
                                                    data-bs-toggle="dropdown" aria-expanded="false">
                                                <i class="fas fa-ellipsis-v"></i>
                                            </button>
                                            <ul class="dropdown-menu dropdown-menu-end shadow-sm">
                                                <li>
                                                    <a class="dropdown-item" href="@Url.Action("Edit", "Users", new { id = user.UserId })">
                                                        <i class="fas fa-edit me-2 text-primary"></i>Edit User
                                                    </a>
                                                </li>
                                                @if (user.IsActive)
                                                {
                                                    <li>
                                                        <form asp-action="Deactivate" method="post" class="d-inline">
                                                            @Html.AntiForgeryToken()
                                                            <input type="hidden" name="userId" value="@user.UserId" />
                                                            <button type="submit" class="dropdown-item text-warning" 
                                                                    onclick="return confirm('Are you sure you want to deactivate @user.FullName?')">
                                                                <i class="fas fa-user-slash me-2"></i>Deactivate
                                                            </button>
                                                        </form>
                                                    </li>
                                                }
                                                else
                                                {
                                                    <li>
                                                        <form asp-action="Activate" method="post" class="d-inline">
                                                            @Html.AntiForgeryToken()
                                                            <input type="hidden" name="userId" value="@user.UserId" />
                                                            <button type="submit" class="dropdown-item text-success">
                                                                <i class="fas fa-user-check me-2"></i>Activate
                                                            </button>
                                                        </form>
                                                    </li>
                                                }
                                                <li><hr class="dropdown-divider"></li>
                                                <li>
                                                    <form asp-action="Delete" method="post" class="d-inline">
                                                        @Html.AntiForgeryToken()
                                                        <input type="hidden" name="userId" value="@user.UserId" />
                                                        <button type="submit" class="dropdown-item text-danger" 
                                                                onclick="return confirm('Are you sure you want to permanently delete @user.FullName? This action cannot be undone.')">
                                                            <i class="fas fa-trash me-2"></i>Delete Permanently
                                                        </button>
                                                    </form>
                                                </li>
                                            </ul>
                                        </div>
                                    </td>
                                </tr>
                            }
                        </tbody>
                    </table>
                </div>
            }
            else
            {
                <div class="text-center py-5">
                    <div class="empty-state">
                        <i class="fas fa-users fa-4x text-muted mb-4"></i>
                        <h4 class="text-muted mb-3">No Users Found</h4>
                        <p class="text-muted mb-4">There are no users in the system yet. Start by adding your first user.</p>
                        <a href="@Url.Action("Create", "Users")" class="btn btn-primary btn-lg">
                            <i class="fas fa-user-plus me-2"></i>Add First User
                        </a>
                    </div>
                </div>
            }
        </div>
    </div>
</div>

<!-- Custom CSS for Modern Dashboard -->
<style>
    .bg-gradient-primary {
        background: linear-gradient(135deg, #667eea 0%, #764ba2 100%);
    }
    
    .stat-card {
        transition: transform 0.2s ease-in-out;
        border: none;
    }
    
    .stat-card:hover {
        transform: translateY(-2px);
    }
    
    .avatar-circle {
        width: 40px;
        height: 40px;
        border-radius: 50%;
        background: linear-gradient(135deg, #667eea 0%, #764ba2 100%);
        display: flex;
        align-items: center;
        justify-content: center;
        color: white;
        font-weight: bold;
        font-size: 14px;
    }
    
    .table th {
        font-weight: 600;
        text-transform: uppercase;
        font-size: 0.75rem;
        letter-spacing: 0.5px;
    }
    
    .table td {
        vertical-align: middle;
        border-top: 1px solid #f8f9fa;
    }
    
    .user-row {
        transition: background-color 0.2s ease;
    }
    
    .user-row:hover {
        background-color: #f8f9fa;
    }
    
    .dropdown-menu {
        border: none;
        box-shadow: 0 0.5rem 1rem rgba(0, 0, 0, 0.15);
        border-radius: 0.5rem;
    }
    
    .dropdown-item {
        padding: 0.5rem 1rem;
        transition: background-color 0.2s ease;
    }
    
    .dropdown-item:hover {
        background-color: #f8f9fa;
    }
    
    .empty-state {
        padding: 3rem 0;
    }
    
    .alert {
        border: none;
        border-radius: 0.5rem;
    }
    
    .btn {
        border-radius: 0.5rem;
        font-weight: 500;
    }
    
    .card {
        border-radius: 0.75rem;
        border: none;
    }
    
    .input-group-text {
        border-radius: 0.5rem 0 0 0.5rem;
    }
    
    .form-control {
        border-radius: 0 0.5rem 0.5rem 0;
    }
    
    /* Animation for alerts */
    .alert {
        animation: slideInDown 0.3s ease-out;
    }
    
    @@keyframes slideInDown {
        from {
            transform: translateY(-20px);
            opacity: 0;
        }
        to {
            transform: translateY(0);
            opacity: 1;
        }
    }
    
    /* Responsive adjustments */
    @@media (max-width: 768px) {
        .dashboard-header .btn-lg {
            font-size: 0.875rem;
            padding: 0.5rem 1rem;
        }
        
        .stat-card .stat-icon {
            display: none;
        }
        
        .table-responsive {
            font-size: 0.875rem;
        }
    }
</style>

@section Scripts {
    <script>
        $(document).ready(function() {
            // Auto-hide alerts after 5 seconds
            setTimeout(function() {
                $('.alert').fadeOut('slow');
            }, 5000);
            
            // Search functionality
            $('#userSearch').on('keyup', function() {
                var searchTerm = $(this).val().toLowerCase();
                $('.user-row').each(function() {
                    var userName = $(this).find('h6').text().toLowerCase();
                    var userEmail = $(this).find('a[href^="mailto:"]').text().toLowerCase();
                    var userPhone = $(this).find('a[href^="tel:"]').text().toLowerCase();
                    
                    if (userName.includes(searchTerm) || userEmail.includes(searchTerm) || userPhone.includes(searchTerm)) {
                        $(this).show();
                    } else {
                        $(this).hide();
                    }
                });
            });
            
            // Filter functionality
            $('[data-filter]').on('click', function(e) {
                e.preventDefault();
                var filter = $(this).data('filter');
                
                $('.user-row').each(function() {
                    var status = $(this).data('status');
                    var role = $(this).data('role');
                    
                    var show = false;
                    switch(filter) {
                        case 'all':
                            show = true;
                            break;
                        case 'active':
                            show = status === 'active';
                            break;
                        case 'inactive':
                            show = status === 'inactive';
                            break;
                        case 'admin':
                            show = role === 'admin';
                            break;
                        case 'project manager':
                            show = role === 'project manager';
                            break;
                        case 'contractor':
                            show = role === 'contractor';
                            break;
                        case 'client':
                            show = role === 'client';
                            break;
                    }
                    
                    if (show) {
                        $(this).show();
                    } else {
                        $(this).hide();
                    }
                });
                
                // Update active filter button
                $('[data-filter]').removeClass('active');
                $(this).addClass('active');
            });
            
            // Enhanced confirmation dialogs
            $('form[asp-action="Delete"] button[type="submit"]').on('click', function(e) {
                var userName = $(this).closest('tr').find('h6').text();
                if (!confirm(`Are you sure you want to permanently delete "${userName}"? This action cannot be undone.`)) {
                    e.preventDefault();
                }
            });
            
            $('form[asp-action="Deactivate"] button[type="submit"]').on('click', function(e) {
                var userName = $(this).closest('tr').find('h6').text();
                if (!confirm(`Are you sure you want to deactivate "${userName}"?`)) {
                    e.preventDefault();
                }
            });
        });
    </script>
}
